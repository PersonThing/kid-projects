{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/regexparam.mjs","../../src/pages/LevelBuilder/to-png.js","../../src/stores/local-storage-store.js","../../src/stores/art-store.js","../../src/pages/LevelBuilder/components/Art.svelte","../../src/pages/LevelBuilder/components/LevelBuilderLayout.svelte","../../src/pages/LevelBuilder/ArtMaker.svelte","../../src/pages/LevelBuilder/components/FieldGraphicPicker.svelte","../../src/pages/LevelBuilder/components/FieldText.svelte","../../src/pages/LevelBuilder/components/FieldCheckbox.svelte","../../src/pages/LevelBuilder/components/FieldNumber.svelte","../../src/stores/block-store.js","../../src/pages/LevelBuilder/BlockBuilder.svelte","../../src/stores/character-store.js","../../src/pages/LevelBuilder/CharacterBuilder.svelte","../../src/stores/enemy-store.js","../../src/pages/LevelBuilder/EnemyBuilder.svelte","../../src/pages/LevelBuilder/components/FieldCharacterPicker.svelte","../../src/pages/Play/HealthBar.svelte","../../src/pages/Play/LivingSprite.svelte","../../src/pages/Play/Level.svelte","../../src/pages/Play/LevelPreview.svelte","../../src/pages/LevelBuilder/components/LevelBuilderDrawingTool.svelte","../../src/pages/LevelBuilder/make-thumbnail.js","../../src/stores/level-store.js","../../src/pages/LevelBuilder/LevelBuilder.svelte","../../src/pages/LevelBuilder/Index.svelte","../../src/pages/Play/Status.svelte","../../src/pages/Play/Instructions.svelte","../../src/pages/Play/Viewport.svelte","../../src/pages/Play/GameOver.svelte","../../src/pages/Play/spatial-functions.js","../../src/pages/Play/Game.svelte","../../src/pages/Play/enemies.js","../../src/pages/Play/Index.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\n\n/**\n * Wraps a route to add route pre-conditions.\n * \n * @param {SvelteComponent} route - Svelte component for the route\n * @param {Object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...Function} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {Object} Wrapped route\n */\nexport function wrap(route, userData, ...conditions) {\n    // Check if we don't have userData\n    if (userData && typeof userData == 'function') {\n        conditions = (conditions && conditions.length) ? conditions : []\n        conditions.unshift(userData)\n        userData = undefined\n    }\n\n    // Parameter route and each item of conditions must be functions\n    if (!route || typeof route != 'function') {\n        throw Error('Invalid parameter route')\n    }\n    if (conditions && conditions.length) {\n        for (let i = 0; i < conditions.length; i++) {\n            if (!conditions[i] || typeof conditions[i] != 'function') {\n                throw Error('Invalid parameter conditions[' + i + ']')\n            }\n        }\n    }\n\n    // Returns an object that contains all the functions to execute too\n    const obj = {route, userData}\n    if (conditions && conditions.length) {\n        obj.conditions = conditions\n    }\n\n    // The _sveltesparouter flag is to confirm the object was created by this router\n    Object.defineProperty(obj, '_sveltesparouter', {\n        value: true\n    })\n\n    return obj\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    return tick().then(() => {\n        window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n    })\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function pop() {\n    // Execute this code when the current call stack is complete\n    return tick().then(() => {\n        window.history.back()\n    })\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    return tick().then(() => {\n        const dest = (location.charAt(0) == '#' ? '' : '#') + location\n        try {\n            window.history.replaceState(undefined, undefined, dest)\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n        }\n\n        // The method above doesn't trigger the hashchange event, so let's do that manually\n        window.dispatchEvent(new Event('hashchange'))\n    })\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute')\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n}\n\n/**\n * Performs a callback in the next tick and returns a Promise that resolves once that's done\n *\n * @param {Function} cb - Callback to invoke\n * @returns {Promise} Promise that resolves after the callback has been invoked, with the return value of the callback (if any)\n * @deprecated Deprecated since version 2.2 and will be removed in version 3. Use `tick` from the Svelte runtime instead (`import {tick} from 'svelte'`).\n */\nexport function nextTickPromise(cb) {\n    // eslint-disable-next-line no-console\n    console.warn('nextTickPromise from \\'svelte-spa-router\\' is deprecated and will be removed in version 3; use the \\'tick\\' method from the Svelte runtime instead')\n    return tick().then(cb)\n}\n</script>\n\n{#if componentParams}\n  <svelte:component this=\"{component}\" params=\"{componentParams}\" on:routeEvent />\n{:else}\n  <svelte:component this=\"{component}\" on:routeEvent />\n{/if}\n\n<script>\nimport {createEventDispatcher} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent} component - Svelte component for the route\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.route\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n        }\n        else {\n            this.component = component\n            this.conditions = []\n            this.userData = undefined\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, remove it before we run the matching\n        if (prefix && path.startsWith(prefix)) {\n            path = path.substr(prefix.length) || '/'\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            out[this._keys[i]] = matches[++i] || null\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {SvelteComponent} component - Svelte component\n     * @property {string} name - Name of the Svelte component\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {Object} [userData] - Custom data passed by the user\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!this.conditions[i](detail)) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nconst dispatchNextTick = (name, detail) => {\n    // Execute this code when the current call stack is complete\n    tick().then(() => {\n        dispatch(name, detail)\n    })\n}\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n$: {\n    // Find a route matching the location\n    component = null\n    let i = 0\n    while (!component && i < routesList.length) {\n        const match = routesList[i].match($loc.location)\n        if (match) {\n            const detail = {\n                component: routesList[i].component,\n                name: routesList[i].component.name,\n                location: $loc.location,\n                querystring: $loc.querystring,\n                userData: routesList[i].userData\n            }\n\n            // Check if the route can be loaded - if all conditions succeed\n            if (!routesList[i].checkConditions(detail)) {\n                // Trigger an event to notify the user\n                dispatchNextTick('conditionsFailed', detail)\n                break\n            }\n            component = routesList[i].component\n            // Set componentParams onloy if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n            // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n            if (match && typeof match == 'object' && Object.keys(match).length) {\n                componentParams = match\n            }\n            else {\n                componentParams = null\n            }\n\n            dispatchNextTick('routeLoaded', detail)\n        }\n        i++\n    }\n}\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","const pngScale = 2\r\nexport default function toPNG(data, width, height) {\r\n\tconst canvas = document.createElement('canvas')\r\n\tcanvas.width = width * pngScale\r\n\tcanvas.height = height * pngScale\r\n\tconst ctx = canvas.getContext('2d')\r\n\tfor (let y = 0; y < data.length; y++) {\r\n\t\tfor (let x = 0; x < data[y].length; x++) {\r\n\t\t\tconst color = data[y][x]\r\n\t\t\tif (color == null || color == 'transparent') continue\r\n\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.rect(x * pngScale, y * pngScale, pngScale, pngScale)\r\n\t\t\tctx.fillStyle = color\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t}\r\n\r\n\treturn canvas.toDataURL('image/png')\r\n}\r\n","// import LocalStorageStore from 'LocalStorageStore'\r\n// const myStore = LocalStorageStore('some unique key', 'default value')\r\n// todo test this\r\n// then you should be able to bind to it and set to it just like any other store, only it'll be saved in local storage too...\r\nimport { writable } from 'svelte/store'\r\n\r\nfunction LocalStorageStore(key, defaultValue) {\r\n\tconst valueFromStorage = localStorage.getItem(key)\r\n\tconst initialValue =\r\n\t\tvalueFromStorage != null && valueFromStorage != 'null' && valueFromStorage != 'undefined' ? JSON.parse(valueFromStorage) : defaultValue\r\n\tconst { subscribe, set, update } = writable(initialValue)\r\n\treturn {\r\n\t\tsubscribe,\r\n\t\tset: function (value) {\r\n\t\t\tset(value)\r\n\t\t\tlocalStorage.setItem(key, JSON.stringify(value))\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport default LocalStorageStore\r\n","import LocalStorageStore from './local-storage-store'\r\nexport default LocalStorageStore('pixel-drawings', {})\r\n","{#if graphic != null && graphic.png != null}\r\n\t<img src={graphic.png} alt={graphic.name} title={graphic.name} style=\"transform: rotate({rotation}deg)\" />\r\n{/if}\r\n\r\n<script>\r\n\timport toPNG from '../to-png'\r\n\timport artStore from '../../../stores/art-store'\r\n\r\n\texport let name\r\n\r\n\texport let spin = false\r\n\r\n\tlet graphic\r\n\r\n\t$: if (name != null) {\r\n\t\tgraphic = $artStore[name]\r\n\t\t// set png for any that haven't been saved with png yet\r\n\t\tif (graphic != null && graphic.png == null) {\r\n\t\t\tgraphic.png = toPNG(graphic, graphic.width, graphic.height)\r\n\t\t}\r\n\t}\r\n\r\n\tlet spinTimeout\r\n\tlet rotation = 0\r\n\t$: if (spin) {\r\n\t\tspinTimeout = setTimeout(() => {\r\n\t\t\trotation += 30\r\n\t\t}, 25)\r\n\t} else {\r\n\t\tclearTimeout(spinTimeout)\r\n\t}\r\n</script>\r\n","<div class=\"flex align-top\">\r\n\t<div>\r\n\t\t<div class=\"list-group\">\r\n\t\t\t<a class=\"list-group-item list-group-item-action\" class:active={tab == 'art'} href={baseUrl}>Art</a>\r\n\t\t\t{#each tabs as t}\r\n\t\t\t\t<a class=\"list-group-item list-group-item-action\" class:active={tab == t.name} href=\"{baseUrl}/{t.name}/new\">{t.name}</a>\r\n\t\t\t\t{#if t.name == tab}\r\n\t\t\t\t\t<div class=\"list-group sub-nav\">\r\n\t\t\t\t\t\t<a href=\"{baseUrl}/{t.name}/new\" class=\"list-group-item list-group-item-action\" class:list-group-item-success={store[activeName] == null}>\r\n\t\t\t\t\t\t\t+ New\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t{#each Object.keys(store) as name}\r\n\t\t\t\t\t\t\t<a class=\"list-group-item list-group-item-action\" class:active={activeName == name} href=\"{baseUrl}/{t.name}/{name}\">\r\n\t\t\t\t\t\t\t\t<Art name={store[name][t.graphicKey]} />\r\n\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{/if}\r\n\t\t\t{/each}\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"flex-grow\">\r\n\t\t<slot />\r\n\t</div>\r\n</div>\r\n\r\n<script>\r\n\timport Art from './Art.svelte'\r\n\r\n\texport let tab\r\n\texport let activeName\r\n\texport let store\r\n\r\n\tconst baseUrl = '#/level-builder'\r\n\r\n\tconst tabs = [\r\n\t\t{ name: 'blocks', graphicKey: 'graphic' },\r\n\t\t{ name: 'characters', graphicKey: 'graphicStill' },\r\n\t\t{ name: 'enemies', graphicKey: 'graphicStill' },\r\n\t\t{ name: 'levels', graphicKey: null },\r\n\t]\r\n</script>\r\n\r\n<style>\r\n\t.sub-nav {\r\n\t\tmargin-left: 20px;\r\n\t}\r\n\t.sub-nav .list-group-item {\r\n\t\tpadding: 6px 12px;\r\n\t}\r\n</style>\r\n","<svelte:window on:keyup={onKeyUp} />\r\n\r\n<LevelBuilderLayout tab=\"art\">\r\n\t{#if savedNames.length}\r\n\t\t<div>\r\n\t\t\t{#each savedNames as savedDrawingName}\r\n\t\t\t\t<div class=\"btn-group mr-1 mb-1\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclass=\"btn btn-sm btn-{savedDrawingName == loaded ? 'primary active' : 'secondary'}\"\r\n\t\t\t\t\t\ton:click={() => load(savedDrawingName)}>\r\n\t\t\t\t\t\t{savedDrawingName}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-secondary\" on:click={() => deleteSave(savedDrawingName)}>x</button>\r\n\t\t\t\t</div>\r\n\t\t\t{/each}\r\n\t\t</div>\r\n\t{/if}\r\n\r\n\t<div class=\"flex my-3\">\r\n\t\t<button type=\"button\" class=\"btn btn-success btn-sm mr-2\" on:click={() => save()}>Save</button>\r\n\t\t<button type=\"button\" class=\"btn btn-secondary btn-sm\" on:click={reset}>Reset</button>\r\n\r\n\t\t<div class=\"btn-group\">\r\n\t\t\t<button type=\"button\" class=\"btn btn-secondary btn-sm\" on:click={flipX}>Flip horizontal</button>\r\n\t\t\t<button type=\"button\" class=\"btn btn-secondary btn-sm\" on:click={flipY}>Flip vertical</button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"btn-group\">\r\n\t\t\t<button type=\"button\" disabled={undos.length == 0} class=\"btn btn-default btn-sm\" on:click={undo}>Undo {undos.length}</button>\r\n\t\t\t<button type=\"button\" disabled={redos.length == 0} class=\"btn btn-default btn-sm\" on:click={redo}>Redo {redos.length}</button>\r\n\t\t</div>\r\n\r\n\t\t<div>\r\n\t\t\tGrid size\r\n\t\t\t<input type=\"number\" bind:value={gridSize} min=\"15\" max=\"50\" step=\"5\" />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tHeight\r\n\t\t\t<input type=\"number\" bind:value={height} placeholder=\"Height\" />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tWidth\r\n\t\t\t<input type=\"number\" bind:value={width} placeholder=\"Width\" />\r\n\t\t</div>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" bind:checked={showGrid} />\r\n\t\t\tShow grid\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<div class=\"flex align-top\">\r\n\t\t<div class=\"controls\">\r\n\t\t\t<div class=\"color-picker\">\r\n\t\t\t\t{#each colors as color}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tstyle=\"background: {color != 'transparent' ? color : 'linear-gradient(110deg, rgba(200,200,200,1) 45%, rgba(255,255,255,1) 55%, rgba(255,255,255,1) 100%)'}\"\r\n\t\t\t\t\t\tclass:active={color == selectedColor}\r\n\t\t\t\t\t\ton:click={() => selectColor(color)} />\r\n\t\t\t\t{/each}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"flex-grow \">\r\n\t\t\t<div class=\"my-1\">\r\n\t\t\t\tPreview at in-game size / repeated next to same graphic:\r\n\t\t\t\t<div class=\"p-3 preview-bg flex\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={previewPNG} alt=\"preview\" />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<!-- if block size, show repeated in x and y-->\r\n\t\t\t\t\t{#if width == 20 && height == 20}\r\n\t\t\t\t\t\t<div class=\"ml-3\">\r\n\t\t\t\t\t\t\t{#each [0, 0] as r}\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{#each [0, 0, 0, 0] as margin}\r\n\t\t\t\t\t\t\t\t\t\t<img src={previewPNG} alt=\"block repeating preview\" />\r\n\t\t\t\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<svg\r\n\t\t\t\tclass=\"preview-bg\"\r\n\t\t\t\twidth={width * (gridSize + 1)}\r\n\t\t\t\theight={height * (gridSize + 1)}\r\n\t\t\t\ton:mousedown={onSvgMouseDown}\r\n\t\t\t\ton:mouseup={onSvgMouseUp}\r\n\t\t\t\ton:contextmenu|preventDefault\r\n\t\t\t\ton:mousemove={e => onSvgMouseMove(e.target)}>\r\n\t\t\t\t{#each rows as row}\r\n\t\t\t\t\t{#each columns as column}\r\n\t\t\t\t\t\t<rect\r\n\t\t\t\t\t\t\ty={row * gridSize}\r\n\t\t\t\t\t\t\tx={column * gridSize}\r\n\t\t\t\t\t\t\tstyle=\"fill: {getCellColor(data, row, column)}\"\r\n\t\t\t\t\t\t\twidth={gridSize}\r\n\t\t\t\t\t\t\theight={gridSize}\r\n\t\t\t\t\t\t\tdata-row={row}\r\n\t\t\t\t\t\t\tdata-column={column}\r\n\t\t\t\t\t\t\tstroke={showGrid ? '#eee' : null} />\r\n\t\t\t\t\t{/each}\r\n\t\t\t\t{/each}\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</LevelBuilderLayout>\r\n\r\n<script>\r\n\timport LevelBuilderLayout from './components/LevelBuilderLayout.svelte'\r\n\timport LocalStorageStore from '../../stores/local-storage-store'\r\n\timport toPNG from './to-png'\r\n\r\n\tconst artStore = LocalStorageStore('pixel-drawings', {})\r\n\t$: savedNames = Object.keys($artStore)\r\n\r\n\t$: previewPNG = toPNG(data, width, height)\r\n\r\n\tlet loaded = null\r\n\tconst colors = [\r\n\t\t'transparent',\r\n\t\t'white',\r\n\t\t'rgb(204, 204, 204)',\r\n\t\t'rgb(160, 164, 160)',\r\n\t\t'rgb(102, 102, 102)',\r\n\t\t'rgb(51, 51, 51)',\r\n\t\t'black',\r\n\t\t'rgb(119, 59, 11)',\r\n\t\t'blue',\r\n\t\t'pink',\r\n\t\t'yellow',\r\n\t\t'orange',\r\n\t\t'red',\r\n\t\t'purple',\r\n\t\t'teal',\r\n\t\t'green',\r\n\t\t'rgb(40, 40, 184)',\r\n\t\t'rgb(40, 80, 224)',\r\n\t\t'rgb(80, 80, 248)',\r\n\t\t'rgb(120, 124, 248)',\r\n\t\t'rgb(160, 0, 16)',\r\n\t\t'rgb(248, 0, 32)',\r\n\t\t'rgb(208, 124, 96)',\r\n\t\t'rgb(248, 208, 176)',\r\n\r\n\t\t'red',\r\n\t\t// bub colors\r\n\t\t'rgb(253, 240, 232)',\r\n\t\t'rgb(245, 222, 208)',\r\n\t\t'rgb(220, 201, 187)',\r\n\t\t'rgb(197, 179, 167)',\r\n\t\t'rgb(186, 167, 153)',\r\n\t\t'rgb(146, 129, 119)',\r\n\t\t'rgb(120, 107, 99)',\r\n\t\t'rgb(80, 68, 68)',\r\n\r\n\t\t// eyes\r\n\t\t'rgb(122, 80, 55)',\r\n\t\t'rgb(178, 105, 58)',\r\n\t\t'rgb(203, 140, 97)',\r\n\t\t'rgb(238, 187, 155)',\r\n\r\n\t\t// ears & nose\r\n\t\t'rgb(75, 53, 39)',\r\n\r\n\t\t// 'white',\r\n\t\t// '#ccc',\r\n\t\t// '#A0A4A0',\r\n\t\t// '#666',\r\n\t\t// '#333',\r\n\t\t// 'black',\r\n\t\t// '#773b0b',\r\n\t\t// 'blue',\r\n\t\t// 'pink',\r\n\t\t// 'yellow',\r\n\t\t// 'orange',\r\n\t\t// 'red',\r\n\t\t// 'purple',\r\n\t\t// 'teal',\r\n\t\t// 'green',\r\n\t\t// '#2828B8',\r\n\t\t// '#2850E0',\r\n\t\t// '#5050F8',\r\n\t\t// '#787CF8',\r\n\t\t// '#A00010',\r\n\t\t// '#F80020',\r\n\t\t// '#D07C60',\r\n\t\t// '#F8D0B0',\r\n\t]\r\n\tlet selectedColor = 'black'\r\n\tlet gridSize = 25\r\n\tlet height = 20\r\n\tlet width = 20\r\n\tlet undos = []\r\n\tlet redos = []\r\n\tlet showGrid = true\r\n\r\n\t$: rows = [...Array(height)].map((_, i) => i)\r\n\t$: columns = [...Array(width)].map((_, i) => i)\r\n\r\n\tlet data = []\r\n\tlet mouseDown = false\r\n\r\n\treset(false)\r\n\r\n\tfunction reset(undoable = true) {\r\n\t\tif (undoable) addUndoState()\r\n\t\tdata = buildRows(height)\r\n\t\tloaded = null\r\n\t}\r\n\r\n\tfunction onSvgMouseDown(e) {\r\n\t\tif (e.altKey || e.button !== 0) {\r\n\t\t\tselectedColor = e.target.style.fill\r\n\t\t} else {\r\n\t\t\taddUndoState()\r\n\t\t\tmouseDown = true\r\n\t\t\tonSvgMouseMove(e.target)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onSvgMouseUp(e) {\r\n\t\tmouseDown = false\r\n\t}\r\n\r\n\tfunction onSvgMouseMove(target) {\r\n\t\tif (!mouseDown) return\r\n\r\n\t\tconst row = target.dataset.row\r\n\t\tconst column = target.dataset.column\r\n\t\tif (row != null && column != null) {\r\n\t\t\tsetColor(row, column)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addUndoState() {\r\n\t\tundos = [...undos.slice(Math.max(undos.length - 20, 0)), JSON.stringify(data)]\r\n\r\n\t\t// if we're adding a new undo state, empty redos\r\n\t\tredos = []\r\n\t}\r\n\r\n\tfunction buildRows(num) {\r\n\t\treturn [...Array(num)].map(r => buildColumns(width))\r\n\t}\r\n\r\n\tfunction buildColumns(num) {\r\n\t\treturn [...Array(num)].map(c => 'transparent')\r\n\t}\r\n\r\n\tfunction undo() {\r\n\t\tif (undos.length == 0) return\r\n\r\n\t\tredos = [...redos, JSON.stringify(data)]\r\n\t\tdata = JSON.parse(undos.pop())\r\n\t\tundos = undos\r\n\t}\r\n\r\n\tfunction redo() {\r\n\t\tif (redos.length == 0) return\r\n\r\n\t\tundos = [...undos, JSON.stringify(data)]\r\n\t\tdata = JSON.parse(redos.pop())\r\n\t\tredos = redos\r\n\t}\r\n\r\n\tfunction setColor(row, column, color = selectedColor) {\r\n\t\t// make sure we have enough rows in data to fit the value\r\n\t\tif (row > data.length) {\r\n\t\t\tconst rowsNeeded = height - data.length\r\n\t\t\tdata = data.concat(buildRows(rowsNeeded))\r\n\t\t}\r\n\r\n\t\t// don't need to worry about columns.. they get auto-filled with null\r\n\t\tdata[row][column] = color\r\n\t}\r\n\r\n\tfunction selectColor(color) {\r\n\t\tselectedColor = color\r\n\t}\r\n\r\n\tfunction save() {\r\n\t\tconst name = prompt('Give us a name', loaded || '')\r\n\t\tif (name == null || name.trim().length == 0) return\r\n\r\n\t\t$artStore[name] = {\r\n\t\t\tname,\r\n\t\t\tgridSize,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tdata,\r\n\t\t\tshowGrid,\r\n\t\t\tpng: toPNG(data, width, height),\r\n\t\t}\r\n\t\tloaded = name\r\n\t}\r\n\r\n\tfunction load(name) {\r\n\t\tlet savedDrawing = JSON.parse(JSON.stringify($artStore[name]))\r\n\r\n\t\tdata = savedDrawing.data\r\n\t\tgridSize = savedDrawing.gridSize\r\n\t\twidth = savedDrawing.width || savedDrawing.data[0].length\r\n\t\theight = savedDrawing.height || savedDrawing.data.length\r\n\t\tshowGrid = savedDrawing.showGrid || showGrid\r\n\t\tundos = []\r\n\t\tredos = []\r\n\t\tloaded = name\r\n\t}\r\n\r\n\tfunction deleteSave(name) {\r\n\t\tif (!confirm(`Are you sure you want to delete ${name}?`)) return\r\n\r\n\t\tif ($artStore.hasOwnProperty(name)) {\r\n\t\t\tdelete $artStore[name]\r\n\t\t\t$artStore = $artStore\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getCellColor(d, row, column) {\r\n\t\treturn d.length > row && d[row].length > column ? d[row][column] || 'transparent' : 'white'\r\n\t}\r\n\r\n\tfunction onKeyUp(e) {\r\n\t\tswitch (e.code) {\r\n\t\t\tcase 'KeyZ':\r\n\t\t\t\tif (e.ctrlKey) undo()\r\n\t\t\t\tbreak\r\n\t\t\tcase 'KeyY':\r\n\t\t\t\tif (e.ctrlKey) redo()\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\tfunction flipY() {\r\n\t\tdata = data.slice(0, height).reverse()\r\n\t}\r\n\r\n\tfunction flipX() {\r\n\t\tdata = data.map(d => d.slice(0, width).reverse())\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.color-picker button {\r\n\t\tdisplay: block;\r\n\t\twidth: 40px;\r\n\t\theight: 25px;\r\n\t\tmargin-bottom: 0;\r\n\t\tborder: none;\r\n\t\tborder: 1px solid #eee;\r\n\t}\r\n\t.color-picker button:focus {\r\n\t\toutline: none;\r\n\t\tborder: 1px solid #eee;\r\n\t}\r\n\r\n\t.color-picker button.active {\r\n\t\twidth: 50px;\r\n\t}\r\n\r\n\tsvg {\r\n\t\tfill: #fff;\r\n\t\tpadding: 5px;\r\n\t}\r\n\r\n\t.flex input[type='number'] {\r\n\t\twidth: 50px;\r\n\t}\r\n\r\n\t.preview-bg {\r\n\t\tbackground: rgb(135, 206, 235);\r\n\t}\r\n</style>\r\n","<div class=\"form-group\">\r\n\t<label for=\"graphic\">\r\n\t\t<slot>Graphic</slot>\r\n\t</label>\r\n\t<div class=\"options\">\r\n\t\t{#each options as drawingName}\r\n\t\t\t<div class:active={value == drawingName} on:click={() => (value = drawingName)}>\r\n\t\t\t\t<Art name={drawingName} {spin} />\r\n\t\t\t</div>\r\n\t\t{/each}\r\n\t</div>\r\n</div>\r\n\r\n<script>\r\n\timport artStore from '../../../stores/art-store'\r\n\timport Art from './Art.svelte'\r\n\texport let value = null\r\n\texport let filter = null\r\n\texport let spin = false\r\n\r\n\t$: options = Object.keys($artStore).filter(name => filter == null || filter($artStore[name]))\r\n</script>\r\n\r\n<style>\r\n\t.options {\r\n\t\toverflow: auto;\r\n\t}\r\n\t.options > div {\r\n\t\tpadding: 10px;\r\n\t\tfloat: left;\r\n\t\tborder-radius: 0.25rem;\r\n\t}\r\n\t.options > div.active {\r\n\t\tbackground: #007bff;\r\n\t}\r\n</style>\r\n","<div class=\"form-group\">\r\n\t<label for={name}>\r\n\t\t<slot />\r\n\t</label>\r\n\t<input {name} id={name} type=\"text\" bind:value class=\"form-control\" />\r\n</div>\r\n\r\n<script>\r\n\texport let value = null\r\n\texport let name = 'text'\r\n</script>\r\n","<div class=\"form-group\">\r\n\t<div class=\"form-check\">\r\n\t\t<input {name} id={name} type=\"checkbox\" class=\"form-check-input\" bind:checked />\r\n\t\t<label class=\"form-check-label\" for={name}>\r\n\t\t\t<slot />\r\n\t\t</label>\r\n\t</div>\r\n</div>\r\n\r\n<script>\r\n\texport let checked = null\r\n\texport let name = 'check'\r\n</script>\r\n","<div class=\"form-group\">\r\n\t<label for={name}>\r\n\t\t<slot />\r\n\t</label>\r\n\t<input {name} id={name} type=\"number\" bind:value {min} {max} {step} class=\"form-control\" />\r\n</div>\r\n\r\n<script>\r\n\texport let value = null\r\n\texport let name = 'num'\r\n\texport let min = null\r\n\texport let max = null\r\n\texport let step = 1\r\n</script>\r\n","import LocalStorageStore from './local-storage-store'\r\nexport default LocalStorageStore('blocks', {})\r\n","<LevelBuilderLayout tab=\"blocks\" activeName={input.name} store={$blocks}>\r\n\t<Form on:submit={save}>\r\n\t\t<FieldText name=\"name\" bind:value={input.name}>Name</FieldText>\r\n\t\t<FieldGraphicPicker bind:value={input.graphic} filter={b => b.width == 20 && b.height == 20}>Graphic (must be 20x20)</FieldGraphicPicker>\r\n\t\t<FieldCheckbox name=\"solid\" bind:checked={input.solid}>Solid?</FieldCheckbox>\r\n\t\t<FieldCheckbox name=\"throwOnTouch\" bind:checked={input.throwOnTouch}>Throw things that touch it?</FieldCheckbox>\r\n\t\t<FieldNumber name=\"dps\" bind:value={input.dps}>\r\n\t\t\tDPS (when players or enemies touch this block, how much damage should they take per second?)\r\n\t\t</FieldNumber>\r\n\t\t<span slot=\"buttons\">\r\n\t\t\t{#if !isAdding}\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" on:click={() => del(input.name)}>Delete</button>\r\n\t\t\t{/if}\r\n\t\t</span>\r\n\t</Form>\r\n</LevelBuilderLayout>\r\n\r\n<script>\r\n\timport { push } from 'svelte-spa-router'\r\n\timport LevelBuilderLayout from './components/LevelBuilderLayout.svelte'\r\n\timport FieldGraphicPicker from './components/FieldGraphicPicker.svelte'\r\n\timport FieldText from './components/FieldText.svelte'\r\n\timport FieldCheckbox from './components/FieldCheckbox.svelte'\r\n\timport FieldNumber from './components/FieldNumber.svelte'\r\n\timport Form from './components/Form.svelte'\r\n\timport blocks from '../../stores/block-store'\r\n\r\n\texport let params = {}\r\n\tlet input\r\n\t$: paramName = decodeURIComponent(params.name) || 'new'\r\n\t$: paramName == 'new' ? create() : edit(paramName)\r\n\t$: isAdding = paramName == 'new'\r\n\r\n\tfunction save() {\r\n\t\t$blocks[input.name] = JSON.parse(JSON.stringify(input))\r\n\t\tpush(`/level-builder/blocks/${encodeURIComponent(input.name)}`)\r\n\t}\r\n\r\n\tfunction edit(name) {\r\n\t\tif (!$blocks.hasOwnProperty(name)) return\r\n\t\tinput = JSON.parse(JSON.stringify($blocks[name]))\r\n\t}\r\n\r\n\tfunction create() {\r\n\t\tinput = {\r\n\t\t\tname: '',\r\n\t\t\tsolid: true,\r\n\t\t\tthrowOnTouch: false,\r\n\t\t\tdps: 0,\r\n\t\t}\r\n\t}\r\n\r\n\tfunction del(name) {\r\n\t\tif (confirm(`Are you sure you want to delete \"${name}\"?`)) {\r\n\t\t\tdelete $blocks[name]\r\n\t\t\t$blocks = $blocks\r\n\t\t\tpush('/level-builder/blocks/new')\r\n\t\t}\r\n\t}\r\n</script>\r\n","import LocalStorageStore from './local-storage-store'\r\nexport default LocalStorageStore('characters', {})\r\n","<!-- Fields for each character:\r\n<ul>\r\n\t<li>Standing still graphic (import from pixel art maker)</li>\r\n\t<li>(optional) Moving graphic 1</li>\r\n\t<li>(optional) Moving graphic 2</li>\r\n\t<li>(optional) Moving graphic 3</li>\r\n\t<li>Maximum velocity on ground</li>\r\n\t<li>Jump velocity</li>\r\n\t<li>Gravity Modifier 0-1 (0 = don't fall at all (if 0, need to give a down key), 1 = normal falling speed)</li>\r\n\t<li>Fall damage multiplier 0-1 (0 = no fall damage, 1 = normal fall damage)</li>\r\n\t<li>Max health</li>\r\n\t<li>Abilities... need scripts for them... come up with something pluggable?</li>\r\n</ul> -->\r\n\r\n<LevelBuilderLayout tab=\"characters\" activeName={input.name} store={$characters}>\r\n\t<Form on:submit={save}>\r\n\t\t<FieldText name=\"name\" bind:value={input.name}>Name</FieldText>\r\n\t\t<FieldGraphicPicker bind:value={input.graphicStill} filter={notBlockFilter}>Standing still graphic</FieldGraphicPicker>\r\n\t\t<FieldGraphicPicker bind:value={input.graphicSpinning} filter={notBlockFilter} spin>Spinning graphic</FieldGraphicPicker>\r\n\t\t<!--\r\n\t\t\ttodo, let them select up to 3 moving graphics to cycle through\r\n\t\t\tsprite will sit on each graphic for X # of frames?\r\n\t\t\t<FieldGraphicPicker bind:value={input.graphicMoving1} filter={notBlockFilter}>Moving graphics</FieldGraphicPicker>\r\n\t\t-->\r\n\t\t<FieldNumber name=\"maxVelocity\" min={0} bind:value={input.maxVelocity}>Max velocity</FieldNumber>\r\n\t\t<FieldNumber name=\"jumpVelocity\" min={0} bind:value={input.jumpVelocity}>Jump velocity</FieldNumber>\r\n\t\t<FieldNumber name=\"gravityMultiplier\" min={0} max={2} step={0.1} bind:value={input.gravityMultiplier}>Gravity multiplier</FieldNumber>\r\n\t\t<FieldNumber name=\"fallDamageMultiplier\" min={0} max={1} step={0.1} bind:value={input.fallDamageMultiplier}>Fall damage multiplier</FieldNumber>\r\n\t\t<FieldNumber name=\"maxHealth\" bind:value={input.maxHealth}>Max health</FieldNumber>\r\n\t\t<FieldNumber name=\"dps\" bind:value={input.dps}>DPS (when in contact with enemies - we will replace this with abilities later)</FieldNumber>\r\n\t\t<FieldCheckbox name=\"canFly\" bind:checked={input.canFly}>Can fly?</FieldCheckbox>\r\n\t\t<span slot=\"buttons\">\r\n\t\t\t{#if !isAdding}\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" on:click={() => del(input.name)}>Delete</button>\r\n\t\t\t{/if}\r\n\t\t</span>\r\n\t</Form>\r\n</LevelBuilderLayout>\r\n\r\n<script>\r\n\timport { push } from 'svelte-spa-router'\r\n\timport characters from '../../stores/character-store'\r\n\timport FieldCheckbox from './components/FieldCheckbox.svelte'\r\n\timport FieldGraphicPicker from './components/FieldGraphicPicker.svelte'\r\n\timport FieldNumber from './components/FieldNumber.svelte'\r\n\timport FieldText from './components/FieldText.svelte'\r\n\timport Form from './components/Form.svelte'\r\n\timport LevelBuilderLayout from './components/LevelBuilderLayout.svelte'\r\n\r\n\tconst notBlockFilter = b => b.width != 20 || b.height != 20\r\n\r\n\texport let params = {}\r\n\tlet input\r\n\t$: paramName = decodeURIComponent(params.name) || 'new'\r\n\t$: paramName == 'new' ? create() : edit(paramName)\r\n\t$: isAdding = paramName == 'new'\r\n\r\n\tfunction save() {\r\n\t\t$characters[input.name] = JSON.parse(JSON.stringify(input))\r\n\t\tpush(`/level-builder/characters/${encodeURIComponent(input.name)}`)\r\n\t}\r\n\r\n\tfunction edit(name) {\r\n\t\tif (!$characters.hasOwnProperty(name)) return\r\n\t\tinput = JSON.parse(JSON.stringify($characters[name]))\r\n\t}\r\n\r\n\tfunction create() {\r\n\t\tinput = {\r\n\t\t\tgraphicStill: null,\r\n\t\t\tgraphicSpinning: null,\r\n\t\t\tname: '',\r\n\t\t\tmaxHealth: 100,\r\n\t\t\tmaxVelocity: 20,\r\n\t\t\tjumpVelocity: 15,\r\n\t\t\tgravityMultiplier: 1,\r\n\t\t\tfallDamageMultiplier: 1,\r\n\t\t\tdps: 120,\r\n\t\t}\r\n\t}\r\n\r\n\tfunction del(name) {\r\n\t\tif (confirm(`Are you sure you want to delete \"${name}\"?`)) {\r\n\t\t\tdelete $characters[name]\r\n\t\t\t$characters = $characters\r\n\t\t\tpush('/level-builder/characters/new')\r\n\t\t}\r\n\t}\r\n</script>\r\n","import LocalStorageStore from './local-storage-store'\r\nexport default LocalStorageStore('enemies', {})\r\n","<!-- All same fields as character builder, plus:\r\n<ul>\r\n\t<li>\r\n\t\tBehavior:\r\n\t\t<ul>\r\n\t\t\t<li>pace back and forth</li>\r\n\t\t\t<li>follow player [ leash range, attack from range ]</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul> -->\r\n\r\n<LevelBuilderLayout tab=\"enemies\" activeName={input.name} store={$enemies}>\r\n\t<Form on:submit={save}>\r\n\t\t<FieldText name=\"name\" bind:value={input.name}>Name</FieldText>\r\n\t\t<FieldGraphicPicker bind:value={input.graphicStill} filter={b => b.width != 20 || b.height != 20}>Standing still graphic</FieldGraphicPicker>\r\n\t\t<!-- <FieldGraphicPicker bind:value={input.graphicMoving1}>Moving graphic 1</FieldGraphicPicker>\r\n\t\t\t<FieldGraphicPicker bind:value={input.graphicMoving2}>Moving graphic 2</FieldGraphicPicker>\r\n\t\t\t<FieldGraphicPicker bind:value={input.graphicMoving3}>Moving graphic 3</FieldGraphicPicker> -->\r\n\t\t<FieldNumber name=\"maxVelocity\" min={0} bind:value={input.maxVelocity}>Max velocity</FieldNumber>\r\n\t\t<FieldNumber name=\"jumpVelocity\" min={0} bind:value={input.jumpVelocity}>Jump velocity</FieldNumber>\r\n\t\t<FieldNumber name=\"gravityMultiplier\" min={0} max={2} step={0.1} bind:value={input.gravityMultiplier}>Gravity multiplier</FieldNumber>\r\n\t\t<FieldNumber name=\"fallDamageMultiplier\" min={0} max={1} step={0.1} bind:value={input.fallDamageMultiplier}>Fall damage multiplier</FieldNumber>\r\n\t\t<FieldNumber name=\"maxHealth\" bind:value={input.maxHealth}>Max health</FieldNumber>\r\n\t\t<FieldNumber name=\"score\" bind:value={input.score}>Score (How many points you get when this enemy dies)</FieldNumber>\r\n\t\t<FieldNumber name=\"dps\" bind:value={input.dps}>DPS (when in contact with player - we will replace this with abilities later)</FieldNumber>\r\n\t\t<span slot=\"buttons\">\r\n\t\t\t{#if !isAdding}\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" on:click={() => del(input.name)}>Delete</button>\r\n\t\t\t{/if}\r\n\t\t</span>\r\n\t</Form>\r\n</LevelBuilderLayout>\r\n\r\n<script>\r\n\timport { push } from 'svelte-spa-router'\r\n\timport enemies from '../../stores/enemy-store'\r\n\timport FieldCheckbox from './components/FieldCheckbox.svelte'\r\n\timport FieldGraphicPicker from './components/FieldGraphicPicker.svelte'\r\n\timport FieldNumber from './components/FieldNumber.svelte'\r\n\timport FieldText from './components/FieldText.svelte'\r\n\timport Form from './components/Form.svelte'\r\n\timport LevelBuilderLayout from './components/LevelBuilderLayout.svelte'\r\n\r\n\texport let params = {}\r\n\tlet input\r\n\t$: paramName = decodeURIComponent(params.name) || 'new'\r\n\t$: paramName == 'new' ? create() : edit(paramName)\r\n\t$: isAdding = paramName == 'new'\r\n\r\n\tfunction save() {\r\n\t\t$enemies[input.name] = JSON.parse(JSON.stringify(input))\r\n\t\tpush(`/level-builder/enemies/${encodeURIComponent(input.name)}`)\r\n\t}\r\n\r\n\tfunction edit(name) {\r\n\t\tif (!$enemies.hasOwnProperty(name)) return\r\n\t\tinput = JSON.parse(JSON.stringify($enemies[name]))\r\n\t}\r\n\r\n\tfunction create() {\r\n\t\tinput = {\r\n\t\t\tgraphicStill: null,\r\n\t\t\tname: '',\r\n\t\t\tmaxHealth: 100,\r\n\t\t\tmaxVelocity: 20,\r\n\t\t\tjumpVelocity: 15,\r\n\t\t\tgravityMultiplier: 1,\r\n\t\t\tfallDamageMultiplier: 1,\r\n\t\t\tdps: 120,\r\n\t\t\tscore: 1,\r\n\t\t}\r\n\t}\r\n\r\n\tfunction del(name) {\r\n\t\tif (confirm(`Are you sure you want to delete \"${name}\"?`)) {\r\n\t\t\tdelete $enemies[name]\r\n\t\t\t$enemies = $enemies\r\n\t\t\tpush('/level-builder/enemies/new')\r\n\t\t}\r\n\t}\r\n</script>\r\n","<div class=\"form-group\">\r\n\t<label for=\"graphic\">\r\n\t\t<slot>Characters</slot>\r\n\t</label>\r\n\t<div class=\"options\">\r\n\t\t{#each Object.keys($characterStore) as name}\r\n\t\t\t<div class:active={value.indexOf(name) > -1} on:click={() => toggle(name)}>\r\n\t\t\t\t<Art name={$characterStore[name].graphicStill} />\r\n\t\t\t</div>\r\n\t\t{/each}\r\n\t</div>\r\n</div>\r\n\r\n<script>\r\n\timport artStore from '../../../stores/art-store'\r\n\timport characterStore from '../../../stores/character-store'\r\n\timport Art from './Art.svelte'\r\n\texport let value = []\r\n\texport let filter = null\r\n\r\n\t$: options = Object.keys($artStore).filter(name => filter == null || filter($artStore[name]))\r\n\r\n\tfunction toggle(name) {\r\n\t\tvalue = value.indexOf(name) > -1 ? value.filter(v => v != name) : [...value, name].sort()\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.options {\r\n\t\toverflow: auto;\r\n\t}\r\n\t.options > div {\r\n\t\tpadding: 10px;\r\n\t\tfloat: left;\r\n\t\tborder-radius: 0.25rem;\r\n\t\tmargin-right: 3px;\r\n\t}\r\n\t.options > div.active {\r\n\t\tbackground: #007bff;\r\n\t\t/* background: #28a745; */\r\n\t}\r\n</style>\r\n","<!-- Josh demands a healing animation -->\r\n\r\n<div class=\"health-bar\">\r\n\t<div class=\"filled\" style=\"width: {displayPercent}%; background-color: {color}\" />\r\n\t<div class=\"text\">{displayHealth} {health > 0 ? `(${displayPercent}%)` : 'I am dead.'}</div>\r\n</div>\r\n\r\n<script>\r\n\texport let percent = 100\r\n\texport let health = 100\r\n\texport let maxHealth = 100\r\n\r\n\t$: displayHealth = health > 0 ? Math.round(health) : 0\r\n\t$: percent = Math.round((health / maxHealth) * 100, 2)\r\n\t$: displayPercent = percent > 0 ? percent : 0\r\n\t$: color = percent > 75 ? 'rgba(24, 197, 33, 0.5)' : percent > 25 ? 'rgba(245, 189, 36, 0.5)' : 'rgba(223, 22, 22, 0.5)'\r\n</script>\r\n\r\n<style>\r\n\t.health-bar {\r\n\t\theight: 18px;\r\n\t\tbackground: rgba(0, 0, 0, 0.5);\r\n\t\tposition: relative;\r\n\t\tborder-radius: 5px;\r\n\t\toverflow: hidden;\r\n\t\tmin-width: 75px;\r\n\t}\r\n\r\n\t.filled {\r\n\t\theight: 100%;\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t}\r\n\r\n\t.text {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\tcolor: #ccc;\r\n\t\tfont-size: 12px;\r\n\t}\r\n</style>\r\n","<div class=\"player\" style=\"left: {x}px; bottom: {y}px;\">\r\n\t<HealthBar {health} {maxHealth} />\r\n\t{#if graphic != null}\r\n\t\t<img\r\n\t\t\tclass=\"graphic\"\r\n\t\t\tsrc={graphic.png}\r\n\t\t\talt={name}\r\n\t\t\tstyle=\"width: {graphic.width * artScale}px; height: {graphic.height * artScale}px; transform: scaleX({direction}) rotate({rotate}deg);\" />\r\n\t{/if}\r\n</div>\r\n\r\n<script>\r\n\timport artStore from '../../stores/art-store'\r\n\timport HealthBar from './HealthBar.svelte'\r\n\r\n\tconst artScale = 2\r\n\r\n\texport let name\r\n\texport let maxHealth\r\n\texport let graphicStill\r\n\texport let graphicSpinning\r\n\r\n\texport let vx = 0\r\n\texport let vy = 0\r\n\texport let y = 0\r\n\texport let x = 0\r\n\r\n\texport let health\r\n\r\n\t$: graphic = spinning && graphicSpinning != null ? $artStore[graphicSpinning] : graphicStill != null ? $artStore[graphicStill] : null\r\n\r\n\texport let spinning = false\r\n\r\n\tlet direction = 1\r\n\t$: if (vx != 0) direction = vx > 0 ? 1 : -1\r\n\r\n\t$: rotate = spinning ? spinningRotation : -1 * (5 + (vy > 0 ? vy * 3 : vy * 1.5))\r\n\r\n\tlet spinningRotation = 0\r\n\tlet spinTimeout = null\r\n\t$: if (spinning) {\r\n\t\tspinTimeout = setTimeout(() => {\r\n\t\t\tspinningRotation += 30\r\n\t\t}, 25)\r\n\t} else {\r\n\t\tclearTimeout(spinTimeout)\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.player {\r\n\t\tposition: absolute;\r\n\t}\r\n</style>\r\n","<canvas bind:this={canvas} {width} {height} />\r\n\r\n<script>\r\n\timport { createEventDispatcher } from 'svelte'\r\n\timport blockStore from '../../stores/block-store'\r\n\timport enemyStore from '../../stores/enemy-store'\r\n\timport artStore from '../../stores/art-store'\r\n\r\n\texport let width = 0\r\n\texport let height = 0\r\n\texport let blocks = []\r\n\texport let enemies = null\r\n\texport let playing = false\r\n\tconst artScale = 2\r\n\r\n\tconst dispatch = createEventDispatcher()\r\n\tconst imageCache = {}\r\n\r\n\tlet canvas\r\n\tlet context\r\n\r\n\t$: if (canvas != null) context = canvas.getContext('2d')\r\n\t$: if (blocks != null && width != null && height != null && context != null) {\r\n\t\tcontext.clearRect(0, 0, width, height)\r\n\t\tblocks.forEach(b => drawOnCanvas($blockStore[b.name].graphic, b.x, b.y))\r\n\t\tif (enemies != null) {\r\n\t\t\tenemies.forEach(e => drawOnCanvas($enemyStore[e.name].graphicStill, e.x, e.y))\r\n\t\t}\r\n\t\tdispatch('draw', canvas)\r\n\t}\r\n\r\n\tfunction drawOnCanvas(artName, x, y) {\r\n\t\tlet art = $artStore[artName]\r\n\t\tlet src = art.png\r\n\t\tlet drawing = imageCache[artName]\r\n\r\n\t\tconst drawThisImage = () => {\r\n\t\t\tconst draw = () => context.drawImage(drawing, x, height - y - art.height * artScale)\r\n\t\t\tif (playing) setTimeout(draw, 100)\r\n\t\t\telse draw()\r\n\t\t}\r\n\r\n\t\tif (drawing == null) {\r\n\t\t\tdrawing = new Image()\r\n\t\t\tdrawing.src = src\r\n\t\t\timageCache[artName] = drawing\r\n\t\t}\r\n\r\n\t\tif (drawing.complete) {\r\n\t\t\tdrawThisImage()\r\n\t\t} else {\r\n\t\t\tconst oldOnload = drawing.onload\r\n\t\t\tdrawing.onload = () => {\r\n\t\t\t\tdrawThisImage()\r\n\t\t\t\toldOnload()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n","{#if level}\r\n\t<img\r\n\t\tsrc={level.thumbnail}\r\n\t\talt=\"level preview\"\r\n\t\tclass=\"level-preview\"\r\n\t\tclass:grabbing={mouseDown}\r\n\t\tstyle=\"background: {level.background}\"\r\n\t\ton:mousedown|preventDefault={onMouseDown}\r\n\t\ton:mousemove|preventDefault={onMouseMove}\r\n\t\ton:mouseup|preventDefault={onMouseUp} />\r\n{/if}\r\n\r\n<script>\r\n\timport { createEventDispatcher } from 'svelte'\r\n\texport let level\r\n\tconst dispatch = createEventDispatcher()\r\n\r\n\tlet mouseDown = false\r\n\tfunction onMouseDown(e) {\r\n\t\tmouseDown = true\r\n\t}\r\n\r\n\tfunction onMouseUp(e) {\r\n\t\tmouseDown = false\r\n\t}\r\n\r\n\tfunction onMouseMove(e) {\r\n\t\tif (mouseDown) dispatch('pan', e.offsetX)\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\timg {\r\n\t\tcursor: grab;\r\n\t}\r\n\t.grabbing {\r\n\t\tcursor: grabbing;\r\n\t}\r\n</style>\r\n","<div class=\"drawing-tool\">\r\n\t<LevelPreview level={{ background, thumbnail }} on:pan={onPreviewPan} />\r\n\t<div class=\"tool-picker\">\r\n\t\t<div>\r\n\t\t\tBlocks\r\n\t\t\t<div class=\"btn-group\">\r\n\t\t\t\t{#each Object.keys($blockStore) as name}\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-{name == selectedBlock ? 'primary' : 'light'}\" on:click={() => selectBlock(name)}>\r\n\t\t\t\t\t\t<Art name={$blockStore[name].graphic} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t{/each}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tEnemies\r\n\t\t\t<div class=\"btn-group\">\r\n\t\t\t\t{#each Object.keys($enemyStore) as name}\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-{name == selectedEnemy ? 'primary' : 'default'}\" on:click={() => selectEnemy(name)}>\r\n\t\t\t\t\t\t<Art name={$enemyStore[name].graphicStill} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t{/each}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div\r\n\t\tclass=\"level-container\"\r\n\t\tstyle=\"background: {background}; height: {height + 25}px;\"\r\n\t\tbind:this={levelContainer}\r\n\t\ton:mousedown={onMouseDown}\r\n\t\ton:mouseup={onMouseUp}\r\n\t\ton:mousemove={onMouseMove}\r\n\t\ton:contextmenu|preventDefault>\r\n\t\t<Level {blocks} {enemies} {width} {height} on:draw={onLevelDraw} />\r\n\t</div>\r\n</div>\r\n\r\n<script>\r\n\timport Art from './Art.svelte'\r\n\timport artStore from '../../../stores/art-store'\r\n\timport blockStore from '../../../stores/block-store'\r\n\timport LivingSprite from '../../Play/LivingSprite.svelte'\r\n\timport enemyStore from '../../../stores/enemy-store'\r\n\timport Level from '../../Play/Level.svelte'\r\n\timport makeThumbnail from '../make-thumbnail'\r\n\timport LevelPreview from '../../Play/LevelPreview.svelte'\r\n\r\n\texport let background = null\r\n\r\n\t// each block passed to <Level> needs x, y, width, height, png\r\n\texport let thumbnail\r\n\texport let blocks = []\r\n\texport let enemies = []\r\n\r\n\t$: if (blocks != null && blocks.some(b => b.png != null)) {\r\n\t\tblocks = blocks.map(b => {\r\n\t\t\tconst { png, ...otherProps } = b\r\n\t\t\treturn otherProps\r\n\t\t})\r\n\t}\r\n\r\n\tconst blockSize = 40\r\n\r\n\tlet selectedBlock = null\r\n\tlet selectedEnemy = null\r\n\tlet mouseDown = false\r\n\r\n\tlet levelContainer\r\n\tlet canvas\r\n\tconst thumbnailScale = 8\r\n\tfunction onLevelDraw(e) {\r\n\t\tconst canvas = e.detail\r\n\t\tthumbnail = makeThumbnail(canvas, width / thumbnailScale, height / thumbnailScale)\r\n\t}\r\n\r\n\t// todo let them draw higher, use wasd or arrows to navigate around level rather than scrolling\r\n\t// $: highestYUsed = blocks.length > 0 ? Math.max(...blocks.map(b => b.y + b.height)) : 0\r\n\t$: height = 600 //Math.max(400, highestYUsed + 300)\r\n\r\n\t$: highestXUsed = blocks.length > 0 ? Math.max(...blocks.map(b => b.x + b.width)) : 0\r\n\t$: width = Math.max(800, highestXUsed + 500)\r\n\r\n\tfunction selectBlock(name) {\r\n\t\tselectedBlock = name\r\n\t\tselectedEnemy = null\r\n\t}\r\n\r\n\tfunction selectEnemy(name) {\r\n\t\tselectedBlock = null\r\n\t\tselectedEnemy = name\r\n\t}\r\n\r\n\tfunction onPreviewPan(e) {\r\n\t\tconst centerTargetX = e.detail * thumbnailScale\r\n\t\tconst leftTargetX = Math.max(centerTargetX - levelContainer.clientWidth / 2, 0)\r\n\t\tlevelContainer.scroll(leftTargetX, 0)\r\n\t}\r\n\r\n\tfunction onMouseDown(e) {\r\n\t\t// if they right click or alt click, select whatever block they're hovering over\r\n\t\t// if no block is there, it selects null, which makes placeBlock erase the current block\r\n\t\tif (e.altKey || e.button !== 0) {\r\n\t\t\tselectedBlock = findBlockAtPosition(e)\r\n\t\t\tselectedEnemy = findEnemyAtPosition(e)\r\n\t\t}\r\n\r\n\t\tmouseDown = e.button === 0\r\n\t\tonMouseMove(e)\r\n\t}\r\n\r\n\tfunction onMouseMove(e) {\r\n\t\tif (mouseDown) {\r\n\t\t\tconst { x, y } = getEventItemPosition(e)\r\n\t\t\tplaceItem(x, y)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onMouseUp(e) {\r\n\t\tmouseDown = false\r\n\t}\r\n\r\n\tfunction findBlockAtPosition(e) {\r\n\t\tconst { x, y } = getEventItemPosition(e)\r\n\t\tconst block = blocks.find(b => b.x == x && b.y == y)\r\n\t\treturn block == null ? null : block.name\r\n\t}\r\n\r\n\tfunction findEnemyAtPosition(e) {\r\n\t\tconst { x, y } = getEventItemPosition(e)\r\n\t\tconst enemy = enemies.find(e => e.x == x && e.y == y)\r\n\t\treturn enemy == null ? null : enemy.name\r\n\t}\r\n\r\n\tfunction getEventItemPosition(e) {\r\n\t\tconst container = e.target.closest('.level-container')\r\n\t\treturn {\r\n\t\t\tx: Math.floor(e.offsetX / blockSize) * blockSize,\r\n\t\t\ty: Math.floor((height - e.offsetY) / blockSize) * blockSize,\r\n\t\t}\r\n\t}\r\n\r\n\tfunction placeItem(x, y) {\r\n\t\teraseItemAt(x, y)\r\n\t\tif (selectedBlock != null) {\r\n\t\t\tconst template = $blockStore[selectedBlock]\r\n\t\t\tblocks = [\r\n\t\t\t\t...blocks,\r\n\t\t\t\t{\r\n\t\t\t\t\tname: selectedBlock,\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\twidth: blockSize,\r\n\t\t\t\t\theight: blockSize,\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t} else if (selectedEnemy != null) {\r\n\t\t\tconst template = $enemyStore[selectedEnemy]\r\n\t\t\tenemies = [\r\n\t\t\t\t...enemies,\r\n\t\t\t\t{\r\n\t\t\t\t\tname: selectedEnemy,\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\twidth: template.width,\r\n\t\t\t\t\theight: template.height,\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\r\n\tfunction eraseItemAt(x, y) {\r\n\t\tblocks = blocks.filter(b => b.x != x || b.y != y)\r\n\t\tenemies = enemies.filter(e => e.x != x || e.y != y)\r\n\t}\r\n\r\n\tfunction hydrateEnemy(enemy) {\r\n\t\tconst template = $enemyStore[enemy.name]\r\n\t\treturn {\r\n\t\t\t...template,\r\n\t\t\t...enemy,\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.drawing-tool {\r\n\t\tposition: relative;\r\n\t\twidth: 1400px;\r\n\t}\r\n\r\n\t.tool-picker {\r\n\t\tmargin: 5px 0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: top;\r\n\t}\r\n\t.tool-picker > div {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.tool-picker .btn-group {\r\n\t\tmargin-right: 5px;\r\n\t}\r\n\r\n\t.tool-picker .btn {\r\n\t\theight: 60px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.level-container {\r\n\t\toverflow-x: auto;\r\n\t\tmax-width: 100%;\r\n\t}\r\n</style>\r\n","export default function makeThumbnail(srcCanvas, width, height) {\r\n\tconst canvas = document.createElement('canvas')\r\n\tcanvas.width = width\r\n\tcanvas.height = height\r\n\r\n\tconst context = canvas.getContext('2d')\r\n\tcontext.drawImage(srcCanvas, 0, 0, width, height)\r\n\r\n\treturn canvas.toDataURL('image/png')\r\n}\r\n","import LocalStorageStore from './local-storage-store'\r\nexport default LocalStorageStore('levels', {})\r\n","{#if input != null}\r\n\t<LevelBuilderLayout tab=\"levels\" activeName={input.name} store={$levels}>\r\n\t\t<Form on:submit={save}>\r\n\t\t\t<FieldText name=\"name\" bind:value={input.name}>Name</FieldText>\r\n\t\t\t<FieldCharacterPicker name=\"playableCharacters\" bind:value={input.playableCharacters}>\r\n\t\t\t\tWhich characters can play this level?\r\n\t\t\t</FieldCharacterPicker>\r\n\t\t\t<FieldText name=\"background\" bind:value={input.background}>Background (any css background value)</FieldText>\r\n\t\t\t<LevelBuilderDrawingTool\r\n\t\t\t\tbackground={input.background}\r\n\t\t\t\tbind:thumbnail={input.thumbnail}\r\n\t\t\t\tbind:blocks={input.blocks}\r\n\t\t\t\tbind:enemies={input.enemies} />\r\n\t\t\t<span slot=\"buttons\">\r\n\t\t\t\t{#if !isAdding}\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" on:click={del}>Delete</button>\r\n\t\t\t\t{/if}\r\n\t\t\t</span>\r\n\t\t</Form>\r\n\t</LevelBuilderLayout>\r\n{/if}\r\n\r\n<script>\r\n\timport { push } from 'svelte-spa-router'\r\n\timport characters from '../../stores/character-store'\r\n\timport FieldCharacterPicker from './components/FieldCharacterPicker.svelte'\r\n\timport FieldCheckbox from './components/FieldCheckbox.svelte'\r\n\timport FieldGraphicPicker from './components/FieldGraphicPicker.svelte'\r\n\timport FieldMultiSelect from './components/FieldMultiSelect.svelte'\r\n\timport FieldNumber from './components/FieldNumber.svelte'\r\n\timport FieldText from './components/FieldText.svelte'\r\n\timport Form from './components/Form.svelte'\r\n\timport LevelBuilderDrawingTool from './components/LevelBuilderDrawingTool.svelte'\r\n\timport LevelBuilderLayout from './components/LevelBuilderLayout.svelte'\r\n\timport levels from '../../stores/level-store'\r\n\timport { tick } from 'svelte'\r\n\timport LevelPreview from '../Play/LevelPreview.svelte'\r\n\r\n\texport let params = {}\r\n\tlet input\r\n\t$: paramName = decodeURIComponent(params.name) || 'new'\r\n\t$: paramName == 'new' ? create() : edit(paramName)\r\n\t$: isAdding = paramName == 'new'\r\n\r\n\tfunction save() {\r\n\t\t$levels[input.name] = JSON.parse(JSON.stringify(input))\r\n\t\tpush(`/level-builder/levels/${encodeURIComponent(input.name)}`)\r\n\t}\r\n\r\n\tasync function edit(name) {\r\n\t\tif (!$levels.hasOwnProperty(name)) return\r\n\t\tinput = null\r\n\t\tawait tick()\r\n\t\tinput = JSON.parse(JSON.stringify($levels[name]))\r\n\t}\r\n\r\n\tasync function create() {\r\n\t\tinput = null\r\n\t\tawait tick()\r\n\t\tinput = {\r\n\t\t\tname: '',\r\n\t\t\tplayableCharacters: [],\r\n\t\t\tbackground: 'rgb(135, 206, 235)',\r\n\t\t\tblocks: [],\r\n\t\t\tenemies: [],\r\n\t\t}\r\n\t}\r\n\r\n\tfunction del() {\r\n\t\tif (confirm(`Are you sure you want to delete \"${input.name}\"?`)) {\r\n\t\t\tdelete $levels[input.name]\r\n\t\t\t$levels = $levels\r\n\t\t\tpush('/level-builder/levels/new')\r\n\t\t}\r\n\t}\r\n</script>\r\n","<Router {routes} {prefix} />\r\n\r\n<script>\r\n\texport let params = {}\r\n\timport Router from 'svelte-spa-router'\r\n\timport ArtMaker from './ArtMaker.svelte'\r\n\timport BlockBuilder from './BlockBuilder.svelte'\r\n\timport CharacterBuilder from './CharacterBuilder.svelte'\r\n\timport EnemyBuilder from './EnemyBuilder.svelte'\r\n\timport LevelBuilder from './LevelBuilder.svelte'\r\n\r\n\t$: tab = params.tab || 'art'\r\n\r\n\tconst prefix = '/level-builder'\r\n\tconst routes = {\r\n\t\t'/': ArtMaker,\r\n\t\t'/blocks/:name?': BlockBuilder,\r\n\t\t'/characters/:name?': CharacterBuilder,\r\n\t\t'/enemies/:name?': EnemyBuilder,\r\n\t\t'/levels/:name?': LevelBuilder,\r\n\t}\r\n</script>\r\n","<div>\r\n\t<p>Level: {level.name}</p>\r\n\t<p>Score: {score}</p>\r\n</div>\r\n\r\n<script>\r\n\texport let level = {}\r\n\texport let score = 0\r\n</script>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tposition: absolute;\r\n\t\tfont-size: 30px;\r\n\t\ttop: 10px;\r\n\t\tleft: 10px;\r\n\t\tcolor: #333;\r\n\t}\r\n\tp {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n</style>\r\n","<div class=\"instructions\">\r\n\t<table>\r\n\t\t{#each keyBinds as bind}\r\n\t\t\t<tr>\r\n\t\t\t\t<td>{bind.key}</td>\r\n\t\t\t\t<td>= {bind.action}</td>\r\n\t\t\t</tr>\r\n\t\t{/each}\r\n\t</table>\r\n</div>\r\n\r\n<script>\r\n\tconst keyBinds = [\r\n\t\t{\r\n\t\t\tkey: 'Left + Right Arrow',\r\n\t\t\taction: 'Move',\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'Space',\r\n\t\t\taction: 'Jump',\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'R',\r\n\t\t\taction: 'Spin Attack / Shield',\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'Q',\r\n\t\t\taction: 'Heal',\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'Enter',\r\n\t\t\taction: 'Restart',\r\n\t\t},\r\n\t]\r\n</script>\r\n\r\n<style>\r\n\t.instructions {\r\n\t\tpadding: 10px;\r\n\t}\r\n\r\n\ttable td {\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\ttable tr td:first-child {\r\n\t\ttext-align: right;\r\n\t}\r\n\ttable tr td:last-child {\r\n\t\ttext-align: left;\r\n\t}\r\n</style>\r\n","<div class=\"viewport\" style=\"width: {width}px; height: {height}px; background: {background}\">\r\n\t<div style=\"position: absolute; left: {-x}px; bottom: {-y}px; height: {height}px;\">\r\n\t\t<slot />\r\n\t</div>\r\n</div>\r\n\r\n<script>\r\n\texport let x = 0\r\n\texport let y = 0\r\n\texport let width = 0\r\n\texport let height = 0\r\n\texport let background = null\r\n</script>\r\n\r\n<style>\r\n\t.viewport {\r\n\t\tposition: relative;\r\n\t\toverflow: hidden;\r\n\t}\r\n</style>\r\n","{#if player}\r\n\t<div class=\"game-over\">\r\n\t\t<h1>{player.name} is dead now. You really let him down.</h1>\r\n\t\t<h1>Final score: {score}</h1>\r\n\t\t<p>Press enter or space to restart.</p>\r\n\t</div>\r\n{/if}\r\n\r\n<script>\r\n\texport let score = 0\r\n\texport let player\r\n</script>\r\n\r\n<style>\r\n\t.game-over {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(0, 0, 0, 0.5);\r\n\t\ttext-align: center;\r\n\t\tz-index: 10;\r\n\t\tpadding-top: 150px;\r\n\t}\r\n\r\n\th1 {\r\n\t\tmargin-top: 25x;\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 50px;\r\n\t\tfont-weight: 100;\r\n\t}\r\n\r\n\tp {\r\n\t\tcolor: #eee;\r\n\t}\r\n</style>\r\n","// object x, y coords are always bottom left... add width or height to get other sides\r\nexport const doObjectsIntersect = (a, b) => doObjectsIntersectX(a, b) && doObjectsIntersectY(a, b)\r\nexport const doObjectsIntersectX = (a, b) => a.x < b.x + b.width && a.x + a.width > b.x\r\nexport const doObjectsIntersectY = (a, b) => a.y + a.height >= b.y && a.y <= b.y + b.height\r\nexport const doObjectsIntersectYExclusive = (a, b) => a.y + a.height > b.y && a.y < b.y + b.height\r\nexport const isAAboveB = (a, b) => a.y >= b.y + b.height && doObjectsIntersectX(a, b)\r\n","<svelte:window on:keydown={onKeyDown} on:keyup={onKeyUp} />\r\n\r\n<div class=\"game-window\" bind:this={mainEl}>\r\n\t{#if gameOver}\r\n\t\t<GameOver {score} {player} />\r\n\t{/if}\r\n\t{#if level != null && player != null}\r\n\t\t<Viewport {...viewport} background={level.background}>\r\n\t\t\t<Level {blocks} width={levelWidth} height={levelHeight} playing />\r\n\t\t\t{#each enemies as enemy}\r\n\t\t\t\t<LivingSprite {...enemy} />\r\n\t\t\t{/each}\r\n\t\t\t<LivingSprite {...player} />\r\n\t\t</Viewport>\r\n\t{/if}\r\n\t<Status {level} {score} />\r\n\t<Instructions />\r\n</div>\r\n\r\n<script>\r\n\timport { onMount, onDestroy } from 'svelte'\r\n\timport Status from './Status.svelte'\r\n\timport Level from './Level.svelte'\r\n\timport Instructions from './Instructions.svelte'\r\n\timport Viewport from './Viewport.svelte'\r\n\timport LivingSprite from './LivingSprite.svelte'\r\n\timport HealthBar from './HealthBar.svelte'\r\n\timport GameOver from './GameOver.svelte'\r\n\timport { doObjectsIntersect, isAAboveB, doObjectsIntersectY, doObjectsIntersectYExclusive } from './spatial-functions'\r\n\timport CreateEnemy from './enemies'\r\n\r\n\timport artStore from '../../stores/art-store'\r\n\timport blockStore from '../../stores/block-store'\r\n\timport enemyStore from '../../stores/enemy-store'\r\n\r\n\texport let level = null\r\n\texport let character = null\r\n\r\n\tconst artScale = 2\r\n\tconst startOfLevel = 0\r\n\tlet endOfLevel\r\n\tconst blockSize = 40\r\n\tlet blocks\r\n\tlet damageBlocks\r\n\tlet levelWidth = 0\r\n\tlet levelHeight = 0\r\n\r\n\tlet score = 0\r\n\r\n\tlet mainEl\r\n\tlet player\r\n\tlet enemies\r\n\tlet gameOver = false\r\n\r\n\tlet gameAlive = true\r\n\tlet lastRequestedFrame = null\r\n\r\n\tlet visibleBlocks\r\n\tlet viewport = {\r\n\t\twidth: window.innerWidth,\r\n\t\theight: 600,\r\n\t}\r\n\r\n\tlet leftDown = false\r\n\tlet rightDown = false\r\n\r\n\tonMount(() => {\r\n\t\t// sort blocks by x, then y\r\n\t\tblocks = level.blocks\r\n\t\t\t.sort((a, b) => {\r\n\t\t\t\tif (a.x > b.x) return 1\r\n\t\t\t\telse if (b.x > a.x) return -1\r\n\r\n\t\t\t\tif (a.y > b.y) return -1\r\n\t\t\t\telse if (b.y > a.y) return 1\r\n\r\n\t\t\t\treturn 0\r\n\t\t\t})\r\n\t\t\t.map(b => ({\r\n\t\t\t\t...b,\r\n\t\t\t\tsolid: $blockStore[b.name].solid,\r\n\t\t\t\tpng: $artStore[$blockStore[b.name].graphic].png,\r\n\t\t\t\tdps: $blockStore[b.name].dps,\r\n\t\t\t\tthrowOnTouch: $blockStore[b.name].throwOnTouch,\r\n\t\t\t}))\r\n\r\n\t\tendOfLevel = Math.max(...blocks.map(b => b.x + b.width))\r\n\r\n\t\tdamageBlocks = blocks.filter(b => b.dps > 0)\r\n\r\n\t\tlevelWidth = Math.max(...blocks.map(b => b.x + b.width))\r\n\t\tlevelHeight = 600 //Math.max(...blocks.map(b => b.y + b.height))\r\n\t\tstart()\r\n\t})\r\n\r\n\tonDestroy(() => {\r\n\t\tgameAlive = false\r\n\t\twindow.cancelAnimationFrame(lastRequestedFrame)\r\n\t})\r\n\r\n\tfunction start() {\r\n\t\tscore = 0\r\n\t\tplayer = {\r\n\t\t\t...character,\r\n\t\t\thealth: character.maxHealth,\r\n\t\t\ttvx: character.maxVelocity,\r\n\r\n\t\t\twidth: $artStore[character.graphicStill].width * artScale, // width of graphic\r\n\t\t\theight: $artStore[character.graphicStill].height * artScale, // height of graphic\r\n\r\n\t\t\t// runtime stuff\r\n\t\t\tx: blocks[0].x,\r\n\t\t\ty: blocks[0].y + blocks[0].height + 100,\r\n\t\t\tvx: 0,\r\n\t\t\tvy: 0,\r\n\r\n\t\t\t// todo: replace \"spinning\" with abilities\r\n\t\t\tspinning: false,\r\n\r\n\t\t\ttick() {\r\n\t\t\t\t// x axis controls\r\n\t\t\t\tif (player.grounded) {\r\n\t\t\t\t\tif (leftDown && !rightDown) player.vx -= player.tvx / 5\r\n\t\t\t\t\telse if (rightDown && !leftDown) player.vx += player.tvx / 5\r\n\t\t\t\t\telse player.vx = 0\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// let them control direction a little in the air, but not as much\r\n\t\t\t\t\tif (leftDown && !rightDown) player.vx -= player.tvx / 10\r\n\t\t\t\t\telse if (rightDown && !leftDown) player.vx += player.tvx / 10\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// don't let them break top speed though\r\n\t\t\t\tif (Math.abs(player.vx) > player.tvx) player.vx = player.tvx * (player.vx < 0 ? -1 : 1)\r\n\t\t\t},\r\n\t\t}\r\n\t\tenemies = level.enemies.map(e => {\r\n\t\t\tconst template = $enemyStore[e.name]\r\n\t\t\tconst w = $artStore[template.graphicStill].width * artScale // width of graphic\r\n\t\t\tconst h = $artStore[template.graphicStill].height * artScale // height of graphic\r\n\t\t\treturn CreateEnemy(template, e, w, h)\r\n\t\t})\r\n\t\tgameOver = false\r\n\r\n\t\t// only start game loop if it's not already going\r\n\t\tif (lastRequestedFrame == null) gameLoop()\r\n\t}\r\n\r\n\tfunction gameLoop() {\r\n\t\tif (!gameOver) {\r\n\t\t\t// visibleBlocks = blocks.filter(b => doObjectsIntersect(viewport, b))\r\n\t\t\tplayer = applyWorldToSprite(player, true)\r\n\r\n\t\t\t// handle movement / attack abilities\r\n\t\t\tplayer.tick()\r\n\r\n\t\t\tconst halfViewportWidth = viewport.width / 2\r\n\t\t\tconst halfViewportHeight = viewport.height / 2\r\n\r\n\t\t\tviewport.x =\r\n\t\t\t\t// player is at beginning of level\r\n\t\t\t\tplayer.x < halfViewportWidth\r\n\t\t\t\t\t? // viewport all the way to the left\r\n\t\t\t\t\t  0\r\n\t\t\t\t\t: // player is at end of level\r\n\t\t\t\t\tplayer.x > endOfLevel - halfViewportWidth\r\n\t\t\t\t\t? // viewport all the way to the right\r\n\t\t\t\t\t  endOfLevel - viewport.width\r\n\t\t\t\t\t: // player is in middle of level, viewport centered on player\r\n\t\t\t\t\t  player.x - halfViewportWidth\r\n\r\n\t\t\tviewport.y =\r\n\t\t\t\t// player is near bottom of screen\r\n\t\t\t\tplayer.y < halfViewportHeight\r\n\t\t\t\t\t? // viewport all the way to bottom\r\n\t\t\t\t\t  0\r\n\t\t\t\t\t: // player above half viewport height, center on player\r\n\t\t\t\t\t  player.y - halfViewportHeight\r\n\r\n\t\t\t// for every live enemy intersecting the player, one or the other should take damage\r\n\t\t\tfor (let i = 0; i < enemies.length; i++) {\r\n\t\t\t\tif (enemies[i].alive) {\r\n\t\t\t\t\tenemies[i] = applyWorldToSprite(enemies[i])\r\n\t\t\t\t\tenemies[i].tick(enemies[i], player)\r\n\t\t\t\t\tif (doObjectsIntersect(player, enemies[i])) {\r\n\t\t\t\t\t\tif (player.spinning) {\r\n\t\t\t\t\t\t\tenemies[i].gettingHit = true\r\n\t\t\t\t\t\t\tenemies[i].health -= player.dps / 60 // damage per frame\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tplayer.health -= enemies[i].dps / 60 // damage per frame\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (enemies[i].health <= 0) {\r\n\t\t\t\t\t\tenemies[i].alive = false\r\n\t\t\t\t\t\tenemies[i].onDeath()\r\n\t\t\t\t\t\tscore += enemies[i].score\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// game is over if player dies\r\n\t\t\tif (player.health <= 0) gameOver = true\r\n\t\t}\r\n\r\n\t\tif (gameAlive) lastRequestedFrame = window.requestAnimationFrame(gameLoop)\r\n\t}\r\n\r\n\tfunction applyWorldToSprite(sprite, isPlayerControlled = false) {\r\n\t\tconst surfacesBelowSprite = blocks.filter(b => b.solid && isAAboveB(sprite, b)).map(b => b.y + b.height)\r\n\t\tconst surfaceY = surfacesBelowSprite.length > 0 ? Math.max(...surfacesBelowSprite) : -500 // some number off screen\r\n\r\n\t\tsprite.y += sprite.vy\r\n\t\tsprite.grounded = sprite.y <= surfaceY\r\n\r\n\t\t// gravity affects all sprites\r\n\t\tif (sprite.grounded) {\r\n\t\t\t// we're grounded - take damage if we were previously falling\r\n\t\t\tif (sprite.vy < 0) {\r\n\t\t\t\tsprite.health += (sprite.vy / 10) * sprite.fallDamageMultiplier\r\n\t\t\t\tsprite.vy = 0\r\n\t\t\t}\r\n\r\n\t\t\t// make sure we're exactly on the ground\r\n\t\t\tsprite.y = surfaceY\r\n\t\t} else if (sprite.y < -200) {\r\n\t\t\t// we fell under the map, die\r\n\t\t\tsprite.health = 0\r\n\t\t} else {\r\n\t\t\t// we're in the air, accelerate downward\r\n\t\t\tsprite.vy -= 1\r\n\t\t}\r\n\r\n\t\t// x velocity\r\n\t\tif (sprite.vx != 0) {\r\n\t\t\tif (sprite.vx > 0) {\r\n\t\t\t\t// moving right\r\n\t\t\t\tlet targetX = sprite.x + sprite.vx\r\n\t\t\t\t// any block that would prevent us from reaching our target?\r\n\t\t\t\tconst blockToRight = blocks.find(b => {\r\n\t\t\t\t\t// sprite x + width <= box x\r\n\t\t\t\t\t// target x + width > box x\r\n\t\t\t\t\tconst txw = targetX + sprite.width\r\n\t\t\t\t\tconst sxw = sprite.x + sprite.width\r\n\t\t\t\t\treturn b.solid && txw > b.x && sxw <= b.x && doObjectsIntersectYExclusive(b, sprite)\r\n\t\t\t\t})\r\n\t\t\t\tif (blockToRight != null) targetX = blockToRight.x - sprite.width\r\n\t\t\t\t// don't let them go past end of level\r\n\t\t\t\telse if (targetX > endOfLevel) targetX = endOfLevel\r\n\t\t\t\tsprite.x = targetX\r\n\t\t\t} else if (sprite.vx < 0) {\r\n\t\t\t\t// moving left\r\n\t\t\t\tlet targetX = sprite.x + sprite.vx\r\n\t\t\t\t// any block that would prevent us from reaching target?\r\n\t\t\t\tconst blockToLeft = blocks.find(b => {\r\n\t\t\t\t\t// sprite x >= box x + width\r\n\t\t\t\t\t// target x < box x + width\r\n\t\t\t\t\tconst bxw = b.x + b.width\r\n\t\t\t\t\treturn b.solid && sprite.x >= bxw && targetX < bxw && doObjectsIntersectYExclusive(b, sprite)\r\n\t\t\t\t})\r\n\t\t\t\tif (blockToLeft != null) targetX = blockToLeft.x + blockToLeft.width\r\n\t\t\t\t// don't let them go past start of level\r\n\t\t\t\telse if (targetX < 0) targetX = 0\r\n\r\n\t\t\t\tsprite.x = targetX < startOfLevel ? startOfLevel : targetX\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// blocks that do damage\r\n\t\tfor (let i = 0; i < damageBlocks.length; i++) {\r\n\t\t\tif (doObjectsIntersect(sprite, damageBlocks[i])) {\r\n\t\t\t\tsprite.health -= damageBlocks[i].dps / 60 // damage per frame\r\n\r\n\t\t\t\t// does the block also throw?\r\n\t\t\t\tif (damageBlocks[i].throwOnTouch) {\r\n\t\t\t\t\tsprite.vy = 20\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sprite\r\n\t}\r\n\r\n\tfunction onKeyDown(e) {\r\n\t\tif (gameOver) return\r\n\t\tswitch (e.code) {\r\n\t\t\tcase 'ArrowLeft':\r\n\t\t\t\tleftDown = true\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ArrowRight':\r\n\t\t\t\trightDown = true\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Space':\r\n\t\t\t\tif (player.grounded || player.canFly) player.vy = player.jumpVelocity\r\n\t\t\t\tbreak\r\n\t\t\tcase 'KeyR':\r\n\t\t\t\tplayer.spinning = true\r\n\t\t\t\tbreak\r\n\t\t\tcase 'KeyQ':\r\n\t\t\t\tplayer.health = player.maxHealth\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onKeyUp(e) {\r\n\t\tswitch (e.code) {\r\n\t\t\tcase 'ArrowLeft':\r\n\t\t\t\tleftDown = false\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ArrowRight':\r\n\t\t\t\trightDown = false\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Space':\r\n\t\t\t\tif (gameOver) start()\r\n\t\t\t\tbreak\r\n\t\t\tcase 'KeyR':\r\n\t\t\t\tplayer.spinning = false\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Enter':\r\n\t\t\tcase 'NumpadEnter':\r\n\t\t\t\tstart()\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(e.code)\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.game-window {\r\n\t\twidth: 100%;\r\n\t\theight: 90vh;\r\n\t\tmin-height: 600px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n</style>\r\n","import enemyStore from '../../stores/enemy-store'\r\nconst artScale = 2\r\n\r\n// todo configurable per enemy\r\nconst leashRange = 400 // in pixels\r\n\r\nexport default function CreateEnemy(template, config, width, height) {\r\n\treturn {\r\n\t\t...template,\r\n\t\t...config,\r\n\r\n\t\twidth,\r\n\t\theight,\r\n\r\n\t\thealth: template.maxHealth,\r\n\t\ttvx: template.maxVelocity,\r\n\t\tvx: 0,\r\n\t\tvy: 0,\r\n\t\tgrounded: false,\r\n\t\talive: true,\r\n\r\n\t\ttick(me, player) {\r\n\t\t\tif (!me.grounded) return\r\n\r\n\t\t\t// is player in leash range?\r\n\t\t\tif (Math.abs(player.x - me.x) < leashRange) {\r\n\t\t\t\t// move toward them\r\n\r\n\t\t\t\t// x axis\r\n\t\t\t\tif (player.x == me.x) me.vx = 0\r\n\t\t\t\telse if (player.x < me.x) me.vx = -me.tvx\r\n\t\t\t\telse me.vx = me.tvx\r\n\r\n\t\t\t\t// y axis\r\n\t\t\t\tif (player.y > me.y + me.height) {\r\n\t\t\t\t\tme.vy = me.jumpVelocity\r\n\t\t\t\t\tme.y += 1\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// stop moving\r\n\t\t\t\tme.vx = 0\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonDeath() {\r\n\t\t\t// nothing yet\r\n\t\t},\r\n\t}\r\n}\r\n","{#if levelName != null}\r\n\t<div class=\"mb-2\">\r\n\t\t<button type=\"button\" on:click={() => (levelName = null)} class=\"btn btn-info\">&lt; Change level</button>\r\n\t\t<a href=\"#/level-builder/levels/{encodeURIComponent(levelName)}\" class=\"btn btn-secondary\" role=\"button\">Edit {levelName}</a>\r\n\t\t<a href=\"#/level-builder/characters/{encodeURIComponent(characterName)}\" class=\"btn btn-secondary\" role=\"button\">Edit {characterName}</a>\r\n\t</div>\r\n\r\n\t<Game level={$levels[levelName]} character={$characters[characterName]} />\r\n{:else}\r\n\t<div class=\"list-group\">\r\n\t\t{#each sortedLevelNames as levelName}\r\n\t\t\t<div class=\"list-group-item\">\r\n\t\t\t\t<h4 class=\"mb-0\">{levelName}</h4>\r\n\t\t\t\t<img src={$levels[levelName].thumbnail} style=\"background: {$levels[levelName].background}\" />\r\n\t\t\t\t<div class=\"flex-row\">\r\n\t\t\t\t\t{#each $levels[levelName].playableCharacters as characterName}\r\n\t\t\t\t\t\t<button class=\"btn btn-secondary mr-1\" on:click={() => selectLevel(levelName, characterName)}>\r\n\t\t\t\t\t\t\t<Art name={$characters[characterName].graphicStill} />\r\n\t\t\t\t\t\t\t{characterName}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t{/each}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{/each}\r\n\t</div>\r\n{/if}\r\n\r\n<script>\r\n\timport Art from '../LevelBuilder/components/Art.svelte'\r\n\timport Game from './Game.svelte'\r\n\timport levels from '../../stores/level-store'\r\n\timport characters from '../../stores/character-store'\r\n\timport LevelPreview from './LevelPreview.svelte'\r\n\r\n\tlet levelName\r\n\tlet characterName\r\n\r\n\t$: sortedLevelNames = Object.keys($levels).sort()\r\n\r\n\tfunction selectLevel(l, c) {\r\n\t\tlevelName = l\r\n\t\tcharacterName = c\r\n\t}\r\n</script>\r\n","<ul class=\"nav\">\r\n\t<li class=\"nav-item\">\r\n\t\t<a class=\"nav-link\" href=\"#/level-builder\">Level Builder</a>\r\n\t</li>\r\n\t{#if canPlay}\r\n\t\t<li class=\"nav-item\">\r\n\t\t\t<a class=\"nav-link\" href=\"#/play\">Play!</a>\r\n\t\t</li>\r\n\t{/if}\r\n</ul>\r\n\r\n<main>\r\n\t<Router {routes} />\r\n</main>\r\n\r\n<script>\r\n\t// svelte-spa-router for hash routing since this is just going to be hosted on github pages\r\n\timport Router from 'svelte-spa-router'\r\n\timport LevelBuilder from './pages/LevelBuilder/Index.svelte'\r\n\timport Play from './pages/Play/Index.svelte'\r\n\timport NotFound from './pages/NotFound.svelte'\r\n\r\n\timport levelStore from './stores/level-store'\r\n\r\n\t$: canPlay = Object.keys($levelStore).length > 0\r\n\r\n\tconst routes = {\r\n\t\t'/level-builder/:tab?/:name?': LevelBuilder,\r\n\t\t'/play': Play,\r\n\t\t'*': NotFound,\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\tmain {\r\n\t\tpadding: 1em;\r\n\t\tmax-width: 240px;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\r\n\th1 {\r\n\t\tcolor: #ff3e00;\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-size: 4em;\r\n\t\tfont-weight: 100;\r\n\t}\r\n\r\n\t@media (min-width: 640px) {\r\n\t\tmain {\r\n\t\t\tmax-width: none;\r\n\t\t}\r\n\t}\r\n</style>\r\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","bind","index","props","bound","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","readable","start","writable","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","getLocation","hashPosition","location","href","substr","qsPosition","querystring","loc","$loc","charAt","hash","routes","prefix","RouteItem","path","_sveltesparouter","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","regexparam","route","conditions","userData","_pattern","_keys","startsWith","matches","exec","out","routesList","componentParams","dispatch","dispatchNextTick","match","checkConditions","toPNG","width","height","canvas","getContext","y","x","color","beginPath","rect","fillStyle","toDataURL","LocalStorageStore","defaultValue","valueFromStorage","localStorage","getItem","initialValue","JSON","parse","setItem","stringify","png","graphic","spinTimeout","spin","rotation","$artStore","setTimeout","clearTimeout","baseUrl","graphicKey","tab","activeName","getCellColor","row","column","artStore","loaded","selectedColor","gridSize","undos","redos","showGrid","mouseDown","reset","undoable","addUndoState","buildRows","onSvgMouseMove","dataset","rowsNeeded","concat","setColor","num","buildColumns","undo","redo","selectColor","save","prompt","trim","load","savedDrawing","deleteSave","confirm","hasOwnProperty","savedNames","previewPNG","rows","_","columns","altKey","button","code","ctrlKey","reverse","savedDrawingName","drawingName","checked","min","step","solid","throwOnTouch","dps","params","del","$blocks","paramName","decodeURIComponent","isAdding","encodeURIComponent","graphicStill","graphicSpinning","maxVelocity","jumpVelocity","gravityMultiplier","fallDamageMultiplier","maxHealth","canFly","$characters","score","$enemies","v","sort","percent","health","displayHealth","round","displayPercent","artScale","vx","vy","spinning","direction","spinningRotation","rotate","blocks","enemies","playing","imageCache","drawOnCanvas","artName","art","drawing","drawThisImage","draw","drawImage","Image","complete","oldOnload","onload","clearRect","$blockStore","$enemyStore","thumbnail","background","level","offsetX","levelContainer","selectedBlock","selectedEnemy","selectBlock","selectEnemy","onMouseMove","getEventItemPosition","eraseItemAt","template","placeItem","closest","floor","offsetY","some","otherProps","highestXUsed","srcCanvas","makeThumbnail","centerTargetX","leftTargetX","clientWidth","scroll","find","findBlockAtPosition","enemy","findEnemyAtPosition","playableCharacters","$levels","edit","/","ArtMaker","/blocks/:name?","BlockBuilder","/characters/:name?","CharacterBuilder","/enemies/:name?","EnemyBuilder","/levels/:name?","LevelBuilder","action","player","doObjectsIntersect","doObjectsIntersectX","doObjectsIntersectY","doObjectsIntersectYExclusive","endOfLevel","damageBlocks","mainEl","character","levelWidth","levelHeight","gameOver","gameAlive","lastRequestedFrame","viewport","innerWidth","leftDown","rightDown","tvx","grounded","abs","config","alive","me","CreateEnemy","gameLoop","applyWorldToSprite","halfViewportWidth","halfViewportHeight","gettingHit","onDeath","requestAnimationFrame","sprite","isPlayerControlled","surfacesBelowSprite","isAAboveB","surfaceY","targetX","blockToRight","txw","sxw","blockToLeft","bxw","onDestroy","cancelAnimationFrame","console","log","levelName","characterName","selectLevel","sortedLevelNames","/level-builder/:tab?/:name?","/play","Play","*","NotFound","canPlay","$levelStore","body"],"mappings":"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"}